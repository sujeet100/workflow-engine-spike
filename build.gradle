plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.diffplug.spotless" version "6.14.0"

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '19'


repositories {
	mavenCentral()
}

sourceSets {
	intTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}


ext {
	set('testcontainersVersion', "1.17.6")
}

configurations {
	intTestImplementation.extendsFrom implementation
	intTestRuntimeOnly.extendsFrom runtimeOnly
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("org.assertj:assertj-core:3.24.0")

	intTestImplementation("org.assertj:assertj-core:3.24.0")
	intTestImplementation 'org.testcontainers:junit-jupiter'
	intTestImplementation 'org.testcontainers:postgresql'
	intTestImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	format 'misc', {
		target '*.gradle', '*.md', '.gitignore'

		trimTrailingWhitespace()
		indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		formatAnnotations()
		removeUnusedImports()
		trimTrailingWhitespace()
	}
}
